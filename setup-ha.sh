#!/usr/bin/env bash
set -euo pipefail

# =============================================================
# HA Setup Script for cloud-proxy Hosts
# Installs dependencies, generates configs and README for:
#  - Docker Compose (MariaDB Galera + Nginx Proxy Manager)
#  - Keepalived (Floating IP failover)
#  - Syncthing (Bidirectional sync of /opt/npm-data)
# Usage: export VAR=... && ./setup-ha.sh  (alle Variablen müssen gesetzt sein)
# =============================================================

# 1) Prompt for required variables if unset
vars=(HOST_IP PEER_IPS FLOATING_IP ROLE PRIORITY SYNCTHING_DEVICE_ID SYNCTHING_PEER_DEVICE_IDS \
      DB_ROOT_PASS DB_USER DB_USER_PASS DB_NAME CLUSTER_NAME XTRABACKUP_PASSWORD)
prompts=(
  "this host’s IP (e.g. 10.0.0.2)"
  "comma-separated peer IPs (e.g. 10.0.0.2,10.0.0.3)"
  "floating IP (e.g. 10.0.0.100)"
  "Keepalived role: MASTER or BACKUP"
  "VRRP priority (MASTER > BACKUP) (use 150 for MASTER and 100 for BACKUP)"
  "this host’s Syncthing Device ID"
  "peer Syncthing Device IDs, comma-separated"
  "MariaDB root password (keine Default-Werte)"
  "MariaDB user name (keine Default-Werte)"
  "MariaDB user password (keine Default-Werte)"
  "MariaDB database name (keine Default-Werte)"
  "Galera cluster name (keine Default-Werte)"
  "XtraBackup password for SST (keine Default-Werte)"
)
for i in "${!vars[@]}"; do
  v=${vars[i]}
  p=${prompts[i]}
  if [ -z "${!v:-}" ]; then
    read -rp "Enter ${v} (${p}): " "$v"
    export "$v"
  fi
done

# 2) Paths
DATA_DIR="/opt/npm-data"
MYSQL_CONF_DIR="/etc/mysql/conf.d"
KEEPALIVED_CONF_DIR="/etc/keepalived"
SYNCTHING_CONF_DIR="/root/.config/syncthing"

# 3) Install dependencies
echo "==> Installing dependencies..."
apt update && apt install -y \
  docker.io \
  docker-compose-plugin \
  keepalived \
  syncthing \
  curl \
  apt-transport-https \
  ca-certificates \
  gnupg

# Install Hetzner Cloud CLI
curl -fsSL https://packages.hetzner.com/install.sh | bash
apt install -y hcloud

# Enable services
systemctl enable docker
systemctl enable keepalived
systemctl enable syncthing@root

# 4) Create directories
mkdir -p "$DATA_DIR" "$MYSQL_CONF_DIR" "$KEEPALIVED_CONF_DIR" "$SYNCTHING_CONF_DIR"

# 5) Generate docker-compose.yml
echo "==> Generating docker-compose.yml..."
cat >docker-compose.yml <<EOF
version: "3.8"
services:
  mariadb:
    image: mariadb:10.5
    container_name: npm-db
    environment:
      MYSQL_ROOT_PASSWORD: \${DB_ROOT_PASS}
      CLUSTER_NAME: \${CLUSTER_NAME}
      XTRABACKUP_PASSWORD: \${XTRABACKUP_PASSWORD}
    volumes:
      - galera-data:/var/lib/mysql
    networks:
      - galera-net

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    container_name: npm-app
    depends_on:
      - mariadb
    environment:
      DB_MYSQL_HOST: mariadb
      DB_MYSQL_USER: \${DB_USER}
      DB_MYSQL_PASSWORD: \${DB_USER_PASS}
      DB_MYSQL_NAME: \${DB_NAME}
    volumes:
      - \${DATA_DIR}:/data
    ports:
      - "80:80"
      - "443:443"
      - "81:81"
    networks:
      - galera-net

networks:
  galera-net:
    driver: bridge

volumes:
  galera-data:
EOF

# 6) Generate Galera config
echo "==> Generating Galera config..."
cat >\${MYSQL_CONF_DIR}/galera.cnf <<EOF
[mysqld]
wsrep_on=ON
wsrep_provider=/usr/lib/galera/libgalera_smm.so
wsrep_cluster_address="gcomm://\${HOST_IP},\${PEER_IPS}"
wsrep_cluster_name="\${CLUSTER_NAME}"
wsrep_node_address="\${HOST_IP}"
wsrep_node_name="cloud-proxy-$(hostname)"
wsrep_sst_method=xtrabackup-v2
EOF

# 7) Generate Keepalived config
echo "==> Generating Keepalived config..."
cat >\${KEEPALIVED_CONF_DIR}/keepalived.conf <<EOF
vrrp_instance VI_1 {
    interface eth0
    state \${ROLE}
    virtual_router_id 51
    priority \${PRIORITY}
    advert_int 1
    authentication {
        auth_type PASS
        auth_pass securepass
    }
    virtual_ipaddress {
        \${FLOATING_IP}
    }
}
EOF

# 8) Generate Syncthing config
echo "==> Generating Syncthing config..."
cat >\${SYNCTHING_CONF_DIR}/config.xml <<EOF
<configuration version="32">
  <device id="\${SYNCTHING_DEVICE_ID}" name="$(hostname)" compression="metadata" introducer="false" />
EOF
IFS=',' read -ra PIDS <<<"\${SYNCTHING_PEER_DEVICE_IDS}"
for pid in "\${PIDS[@]}"; do
  cat >>\${SYNCTHING_CONF_DIR}/config.xml <<EOF
  <device id="\${pid}" introducedBy="" />
EOF
end_done
cat >>\${SYNCTHING_CONF_DIR}/config.xml <<EOF
  <folder id="npm-data" label="npm-data" path="\${DATA_DIR}" type="sendreceive">
EOF
for pid in "\${PIDS[@]}"; do
  cat >>\${SYNCTHING_CONF_DIR}/config.xml <<EOF
    <device id="\${pid}" introducedBy="" />
EOF
end_done
cat >>\${SYNCTHING_CONF_DIR}/config.xml <<EOF
    <ignoreDelete>false</ignoreDelete>
    <rescanIntervalS>60</rescanIntervalS>
  </folder>
</configuration>
EOF

# 9) Generate README.md
echo "==> Generating README.md..."
cat >README.md <<EOF
# Cloud-Proxy HA Setup

This directory contains everything needed to stand up a two-node, high-availability
Nginx Proxy Manager cluster. Configs are generated by **setup-ha.sh**:

- **MariaDB Galera Cluster**  
- **Keepalived** for floating-IP failover  
- **Syncthing** for bidirectional sync of \`/opt/npm-data\`  

Source repo: https://github.com/jsbrain/cloud-proxy.git

---

## Prerequisites

- Ubuntu 20.04+ (root or sudo)  
- Network connectivity between both hosts  
- Hetzner Cloud CLI authenticated (\`hcloud auth login\`)  

---

## Quickstart

1. Clone on both hosts:  
   \`\`\`bash
   git clone https://github.com/jsbrain/cloud-proxy.git
   cd cloud-proxy
   \`\`\`  
2. Make script executable and run it:  
   \`\`\`bash
   chmod +x setup-ha.sh
   ./setup-ha.sh
   \`\`\`

---

## Beispiel: Alle Variablen per Umgebungsvariable setzen

Vor dem Ausführen müssen alle Variablen exportiert werden, um Eingabeaufforderungen zu vermeiden:

\`\`\`bash
export HOST_IP=10.0.0.2
export PEER_IPS="10.0.0.2,10.0.0.3"
export FLOATING_IP=10.0.0.100
export ROLE=MASTER
export PRIORITY=150
export SYNCTHING_DEVICE_ID=ABCDEF1234567890
export SYNCTHING_PEER_DEVICE_IDS="ID1,ID2"
export DB_ROOT_PASS="secureRootPass"
export DB_USER="npmuser"
export DB_USER_PASS="secureUserPass"
export DB_NAME="npmdb"
export CLUSTER_NAME="npm-galera"
export XTRABACKUP_PASSWORD="secureXbckPass"
./setup-ha.sh
\`\`\`

---

## Environment Variables

| Variable                  | Beschreibung                             |
| ------------------------- | ---------------------------------------- |
| \`HOST_IP\`               | this host’s IP                           |
| \`PEER_IPS\`              | comma-separated peer IPs                 |
| \`FLOATING_IP\`           | VRRP floating IP                         |
| \`ROLE\`                  | Keepalived role (\`MASTER\` oder \`BACKUP\`) |
| \`PRIORITY\`              | VRRP priority (höher gewinnt)            |
| \`SYNCTHING_DEVICE_ID\`   | this host’s Syncthing Device ID          |
| \`SYNCTHING_PEER_DEVICE_IDS\` | comma-separated peer Syncthing IDs     |
| \`DB_ROOT_PASS\`          | MariaDB root password (erforderlich)     |
| \`DB_USER\`               | MariaDB user name (erforderlich)         |
| \`DB_USER_PASS\`          | MariaDB user password (erforderlich)     |
| \`DB_NAME\`               | MariaDB database name (erforderlich)     |
| \`CLUSTER_NAME\`          | Galera cluster name (erforderlich)       |
| \`XTRABACKUP_PASSWORD\`   | XtraBackup password for SST (erforderlich)|

EOF

echo "==> All done! See README.md for full details."
